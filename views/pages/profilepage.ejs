<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
      integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link rel="stylesheet" href="/css/home.css" />
    <title>Profile</title>
  </head>
  <body>
    <!-- navbar -->
    <%- include('../includes/navbar.ejs')%>

    <!-- main -->
    <main>
      <div class="container">
        <!-- left -->
        <%- include('../includes/sidebar.ejs')%>
        <!-- middle -->
        <div class="middle">
            <div class="profilesec">
                <div class="profilesec-avatar">
                    <img src="../img/boy.png" class="profilesec-img" id="profileImage">
                    <p class="profilesec-name" id="user-name-profile">Loading...</p>
                    <button class="change-image-btn">Change Image</button>
                    <input type="file" id="imageInputProfile" accept="image/*" style="display: none;">
                </div>                              
                <img src="../img/cover.jpg" alt="" class="profilesec-cover" id="coverImage">
            </div>
            <!-- Modal Structure -->
            <div id="imageModal" class="modal-changeimg">
                <div class="modal-changeimg-content">
                    <span class="close-btn"><i class="fa-solid fa-x"></i></span>
                    <h2>Change Profile and Cover Images</h2>
                    <div class="modal-body">
                        <div class="uploadProfile-section">
                            <label for="profileImageInput">Profile Image:</label>
                            <input type="file" id="profileImageInput" accept="image/*">
                        </div>
                        <div class="uploadProfile-section">
                            <label for="coverImageInput">Cover Image:</label>
                            <input type="file" id="coverImageInput" accept="image/*">
                        </div>
                        <button class="saveimg-profileBtn">Save</button>
                    </div>
                </div>
            </div>
            <div class="profileinfo">
                <div class="profileinfos">
                    <div class="profileinfos-major">
                        <p id="user-faculty">คณะ : <span></span> </p>
                        <p id="user-major">สาขา : <span></span> </p>
                        <p id="user-year">ชั้นปี : <span></span> </p>
                    </div>
                    <div class="infomyprofile">
                        <p id="user-phone">เบอร์โทร : <span></span> </p>
                        <p id="user-email">อีเมล : <span></span> </p>
                        <p id="user-address">ที่อยู่ :</p>
                    </div>
                    <div class="profileinfos-cer">
                        <img src="../img/cover.jpg" alt="">
                        <img src="../img/cover.jpg" alt="">
                        <img src="../img/cover.jpg" alt="">
                    </div>
                </div>
            </div>
            <div class="profilereview">
                <div class="profilereview-head">
                    <h3>Review</h3>
                </div>
                
                <div class="profilereview-texts" id="reviewContainer">
                    <!-- Comments will be dynamically inserted here -->
                </div>
            </div>
        </div>
        <!-- right -->
        <%- include('../includes/rightbar.ejs')%>
      </div>
    </main>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const profileImage = document.getElementById('profileImage');
        const imageInputProfile = document.getElementById('imageInputProfile');
        const coverImage = document.getElementById('coverImage');
        const imageModal = document.getElementById('imageModal');
        const changeImageBtn = document.querySelector('.change-image-btn');
        const closeBtns = document.querySelectorAll('.close-btn');
        const profileImageInput = document.getElementById('profileImageInput');
        const coverImageInput = document.getElementById('coverImageInput');
        const saveImgProfileBtn = document.querySelector('.saveimg-profileBtn');
        const reviewModal = document.getElementById('reviewModal');
        const saveReviewBtn = document.querySelector('.save-review-btn');
        
        if (changeImageBtn) {
          changeImageBtn.addEventListener('click', () => {
            imageModal.style.display = 'block';
          });
        }

        closeBtns.forEach(btn => {
          btn.addEventListener('click', () => {
            btn.closest('.modal-changeimg, .modal-review').style.display = 'none';
          });
        });

        if (saveImgProfileBtn) {
          saveImgProfileBtn.addEventListener('click', () => {
            if (profileImageInput.files.length > 0) {
              const profileFile = profileImageInput.files[0];
              profileImage.src = URL.createObjectURL(profileFile);
            }

            if (coverImageInput.files.length > 0) {
              const coverFile = coverImageInput.files[0];
              coverImage.src = URL.createObjectURL(coverFile);
            }

            imageModal.style.display = 'none';
          });
        }


        async function fetchUserData() {
          try {
            const response = await fetch('/user/u');
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            const userData = await response.json();

            document.getElementById('user-name').textContent = userData.name;
            document.getElementById('user-name-profile').textContent = userData.name;
            document.getElementById('user-faculty').textContent = `คณะ: ${userData.faculty}`;
            document.getElementById('user-major').textContent = `สาขา: ${userData.major}`;
            document.getElementById('user-year').textContent = `ชั้นปี: ${userData.year}`;
            document.getElementById('user-phone').textContent = `เบอร์โทร: 0${userData.phone}`;
            document.getElementById('user-email').textContent = `อีเมล: ${userData.email}`;
            document.getElementById('user-address').textContent = `ที่อยู่: ${userData.address}`;
            document.getElementById('profileImage').src = userData.profilePic || '../img/racc.jfif';
            document.getElementById('profilePic').src = userData.profilePic || '../img/racc.jfif';
            document.getElementById('coverImage').src = userData.coverPic || '../img/cover.jpg';

            if (userData.role === 'student') {
              document.getElementById('mypost').style.display = 'none';
            } else if (userData.role === 'tutor') {
              document.getElementById('myjoin').style.display = 'none';
            }
          } catch (error) {
            console.error('Error fetching user data:', error);
            document.getElementById('user-name').textContent = 'Error loading name';
          }
        }

        async function fetchComments() {
            try {
              const userId = '<%= userId %>'; // This should be rendered by the server-side template engine
              // Fetch tutor data based on the userId
              const tDataResponse = await fetch(`/user/tdata/${userId}`);
              const tData = await tDataResponse.json();
              const tutorId = tData[0].tutor_id; // Correctly access tutor_id from the response
              
          
              // Fetch comments based on tutorId
              const commentsResponse = await fetch(`/comment/${tutorId}`);
              const comments = await commentsResponse.json();
          
              // Check if comments is an array
              if (comments && Array.isArray(comments.comments)) {  // Check if comments exist and if 'comments' key is an array
                const reviewContainer = document.getElementById('reviewContainer');
                reviewContainer.innerHTML = ''; // Clear existing comments

                comments.comments.forEach(comment => {  // Access the nested array
                    const reviewElement = document.createElement('div');
                    reviewElement.classList.add('profilereview-text');
                    reviewElement.innerHTML = 
                    `<span>${comment.student_name}</span>
                    <div class="rating">
                        <i class="fa-solid fa-star rating-icon"></i>
                        <span class="rating-number">${comment.rating}</span>
                        &nbsp;
                        <span>${comment.text}</span>
                    </div>
                    <button class="review-report" data-comment-id="${comment.comment_id}">Report</button>`;
                    reviewContainer.appendChild(reviewElement);
                });

              // Add event listeners to report buttons
            const reportButtons = document.querySelectorAll('.review-report');
            reportButtons.forEach(button => {
              button.addEventListener('click', async function() {
                const commentId = this.dataset.commentId;
                try {
                  const response = await fetch(`/comment/report/${commentId}`, {
                    method: 'PUT',
                    headers: {
                      'Content-Type': 'application/json'
                    }
                  });
                  if (response.ok) {
                    alert('Reported!!!');
                  } else {
                    alert('An error occurred in the report');
                  }
                } catch (error) {
                  console.error('Error reporting comment:', error);
                  alert('An error occurred in the report');
                }
              });
            });
                } else {
                console.error('Comments data is not an array:', comments);
                }

          } catch (error) {
            console.error('Error fetching comments:', error);
          }
        }

        // Call functions when the page loads
        window.onload = async function() {
          await fetchUserData();
          await fetchComments();
        };
      });
    </script>
  </body>
</html>
