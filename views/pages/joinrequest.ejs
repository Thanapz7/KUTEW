<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
      integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link rel="stylesheet" href="/css/home.css" />
    <title>JoinRequest</title>
  </head>
  <body>
    <%- include('../includes/navbar.ejs')%>

    <!-- main -->
    <main>
      <div class="container">
        <!-- left -->
        <%- include('../includes/sidebar.ejs')%>
        <!-- middle -->
        <div class="middle">
          <div class="middle-join">
            <div class="caption-joinrequest">
              <div class="joinrequest-label">
                <label>Join Request</label>
              </div>
            </div>
          </div>
          <div class="joined-info">
            <div class="all-joined">
              <div class="accepted">
                <label class="htext">Accepted</label>
                <div class="accepted-allinfo">
                </div>
              </div>
              <div class="end-course">
                <button class="endcourse">End Course</button>
              </div>
            </div>
          </div>
          <!-- right -->
        </div>
        <%- include('../includes/rightbar.ejs')%>
      </div>
    </main>
    <script>
      /*
      document.addEventListener("DOMContentLoaded", async () => {
        const urlParams = new URLSearchParams(window.location.search);
        const postId = urlParams.get("postId");

        try {
          const response = await fetch(`/join/${postId}`);
          const data = await response.json();

          if (data.message === "Get student in join successfully") {
            const joinRequests = data.data;
            const container = document.querySelector(".middle-join");
        
            if (joinRequests.length > 0) {
                for (const request of joinRequests) {
                    if (request.join_status === "pending") {
                        // Fetch the userid for each student
                        const response = await fetch(`/user/su/${request.student_id}`);
                        const userData = await response.json(); // Assuming the response is in JSON format
                        const userid = userData.user_id; // Adjust according to the actual structure of your response

                  const joinRequestHtml = `
                    <div class="joinrequest-allinfo">
                      <div class="joinrequest-info">
                        <div class="profile-photo">
                          <img src="${request.student_profilePic}" />
                        </div>
                        <div class="info">
                          <label><a href="/profilestd/${userid}">${request.student_name}</a></label>
                        </div>
                      </div>
                      <div class="joinrequest-allbtn">
                        <div class="bttn">
                          <button class="accept accept-btn" data-join-id="${request.join_id}">Accept</button>
                          <button class="deny deny-btn" data-join-id="${request.join_id}">Deny</button>
                        </div>
                      </div>
                    </div>
                  `;
                  console.log(joinRequests)
                  container.innerHTML += joinRequestHtml;
                }
              
              };

              // Event listener for accept button
              document.querySelectorAll('.accept').forEach(button => {
                button.addEventListener('click', async (event) => {
                    const requestId = event.target.getAttribute('data-join-id');
                    const studentId = event.target.getAttribute('data-student-id');
            
                    try {
                        // Accept the join request
                        await fetch(`/join/a/${requestId}`, { method: 'PUT' });

                        //notification
                        // Fetch user ID from the join request
                        const userjoinResponse = await fetch(`/join/user/${requestId}`, { method: 'GET' });
                        const userjoinData = await userjoinResponse.json();
                        const userjoin = userjoinData.user_id;
            
                        // Fetch tutor name
                        const tutorNameResponse = await fetch(`/join/tutor/${requestId}`, { method: 'GET' });
                        const tutorNameData = await tutorNameResponse.json();
                        const tutor_name = tutorNameData.tutor_name;
            
                        // Send notification
                        await fetch('/notifications', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                message: `Tutor: ${tutor_name} รับคุณแล้วนะ`,
                                user_id: userjoin,
                                join_id: requestId
                            })
                        });
            
                        // Remove the join request from the DOM
                        event.target.closest('.joinrequest-allinfo').remove();
                    } catch (error) {
                        console.error('Error processing request:', error);
                    }
                });
            });
            


              document.querySelectorAll('.deny').forEach(button => {
                button.addEventListener('click', async (event) => {
                  const requestId = event.target.getAttribute('data-join-id');
                  try {
                    await fetch(`/join/d/${requestId}`, { method: 'PUT' });

                    //notification
                    // Fetch user ID from the join request
                    const userjoinResponse = await fetch(`/join/user/${requestId}`, { method: 'GET' });
                    const userjoinData = await userjoinResponse.json();
                    const userjoin = userjoinData.user_id;
        
                    // Fetch tutor name
                    const tutorNameResponse = await fetch(`/join/tutor/${requestId}`, { method: 'GET' });
                    const tutorNameData = await tutorNameResponse.json();
                    const tutor_name = tutorNameData.tutor_name;
        
                    // Send notification
                    await fetch('/notifications', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            message: `Tutor: ${tutor_name} ได้ปฎิเสธคุณแล้ว`,
                            user_id: userjoin,
                            join_id: requestId
                        })
                    });
                    event.target.closest('.joinrequest-allinfo').remove();
                  } catch (error) {
                    console.error('Error denying request:', error);
                  }
                });
              });
            } else {
              container.innerHTML = `<h3 class="no-join-info">No join requests yet</h3>`;
            }
          } else {
            console.error("Error fetching join requests:", data.message);
            document.querySelector(".middle-join").innerHTML = "<p>Error retrieving join request data</p>";
          }
        } catch (error) {
          console.error("Error fetching join requests:", error);
          document.querySelector(".middle-join").innerHTML = "<p>Error retrieving join request data</p>";
        }
      });
      */
      document.addEventListener("DOMContentLoaded", async () => {
        const urlParams = new URLSearchParams(window.location.search);
        const postId = urlParams.get("postId");

        try {
          const response = await fetch(`/join/${postId}`);
          const data = await response.json();

          if (data.message === "Get student in join successfully") {
            const joinRequests = data.data;
            const pendingContainer = document.querySelector(".middle-join");
            const acceptedContainer = document.querySelector(".accepted-allinfo");
        
            if (joinRequests.length > 0) {
              for (const request of joinRequests) {
                // Fetch the userid for each student
                const userResponse = await fetch(`/user/su/${request.student_id}`);
                const userData = await userResponse.json();
                const userid = userData.user_id;

                if (request.join_status === "pending") {
                  // Render pending requests
                  const joinRequestHtml = `
                    <div class="joinrequest-allinfo">
                      <div class="joinrequest-info">
                        <div class="profile-photo">
                          <img src="${request.student_profilePic}" />
                        </div>
                        <div class="info">
                          <label><a href="/profilestd/${userid}">${request.student_name}</a></label>
                        </div>
                      </div>
                      <div class="joinrequest-allbtn">
                        <div class="bttn">
                          <button class="accept accept-btn" data-join-id="${request.join_id}">Accept</button>
                          <button class="deny deny-btn" data-join-id="${request.join_id}">Deny</button>
                        </div>
                      </div>
                    </div>
                  `;
                  pendingContainer.innerHTML += joinRequestHtml;

                } else if (request.join_status === "Accept") {
                  // Render accepted requests
                  const acceptedRequestHtml = `
                    <div class="accepted-info">
                      <div class="profile-infos">
                        <div class="profile-photo">
                          <img src="${request.student_profilePic}" />
                        </div>
                        <div class="info">
                          <label><a href="/profilestd/${userid}">${request.student_name}</a></label>
                        </div>
                      </div>
                      <div class="see-payment-btn">
                        <button class="payment">Show Payment</button>
                      </div>
                    </div>
                  `;
                  acceptedContainer.innerHTML += acceptedRequestHtml;
                }
              };

              // Event listeners for accept and deny buttons
              document.querySelectorAll('.accept').forEach(button => {
                button.addEventListener('click', async (event) => {
                  const requestId = event.target.getAttribute('data-join-id');
              
                  try {
                    // Accept the join request
                    await fetch(`/join/a/${requestId}`, { method: 'PUT' });
              
                    // Fetch user ID from the join request
                    const userjoinResponse = await fetch(`/join/user/${requestId}`, { method: 'GET' });
                    const userjoinData = await userjoinResponse.json();
                    const userjoin = userjoinData.user_id;
              
                    // Fetch tutor name
                    const tutorNameResponse = await fetch(`/join/tutor/${requestId}`, { method: 'GET' });
                    const tutorNameData = await tutorNameResponse.json();
                    const tutor_name = tutorNameData.tutor_name;
              
                    // Send notification
                    await fetch('/notifications', {
                      method: 'POST',
                      headers: {
                        'Content-Type': 'application/json'
                      },
                      body: JSON.stringify({
                        message: `Tutor: ${tutor_name} รับคุณแล้วนะ`,
                        user_id: userjoin,
                        join_id: requestId
                      })
                    });
              
                    // Move the join request to the "Accepted" section
                    const joinRequestElement = event.target.closest('.joinrequest-allinfo');
                    const acceptedSection = document.querySelector('.accepted .accepted-allinfo');
              
                    // Create a new element for the "Accepted" section
                    const acceptedInfoHtml = `
                      <div class="accepted-info">
                        ${joinRequestElement.querySelector('.profile-photo').outerHTML}
                        ${joinRequestElement.querySelector('.info').outerHTML}
                      </div>
                      <div class="see-payment-btn">
                        <button class="payment">See Payment</button>
                      </div>
                    `;
              
                    // Add the new element to the "Accepted" section
                    acceptedSection.innerHTML += acceptedInfoHtml;
              
                    // Remove the join request from the "Pending" section
                    joinRequestElement.remove();
              
                  } catch (error) {
                    console.error('Error processing request:', error);
                  }
                });
              });

              document.querySelectorAll('.deny').forEach(button => {
                button.addEventListener('click', async (event) => {
                  const requestId = event.target.getAttribute('data-join-id');
                  try {
                    await fetch(`/join/d/${requestId}`, { method: 'PUT' });

                    // Notification
                    const userjoinResponse = await fetch(`/join/user/${requestId}`);
                    const userjoinData = await userjoinResponse.json();
                    const userjoin = userjoinData.user_id;

                    const tutorNameResponse = await fetch(`/join/tutor/${requestId}`);
                    const tutorNameData = await tutorNameResponse.json();
                    const tutor_name = tutorNameData.tutor_name;

                    // Send notification
                    await fetch('/notifications', {
                      method: 'POST',
                      headers: { 'Content-Type': 'application/json' },
                      body: JSON.stringify({
                        message: `Tutor: ${tutor_name} ได้ปฎิเสธคุณแล้ว`,
                        user_id: userjoin,
                        join_id: requestId
                      })
                    });
                    event.target.closest('.joinrequest-allinfo').remove();
                  } catch (error) {
                    console.error('Error denying request:', error);
                  }
                });
              });
            } else {
              pendingContainer.innerHTML = `<h3 class="no-join-info">No join requests yet</h3>`;
            }
          } else {
            console.error("Error fetching join requests:", data.message);
            document.querySelector(".middle-join").innerHTML = "<p>Error retrieving join request data</p>";
          }
        } catch (error) {
          console.error("Error fetching join requests:", error);
          document.querySelector(".middle-join").innerHTML = "<p>Error retrieving join request data</p>";
        }
      });
    </script>
  </body>
</html>
