<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
      integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link rel="stylesheet" href="/css/home.css" />
    <title>Home Page</title>
  </head>
  <body>
    <!-- navbar -->
    <!-- <nav>
        <div class="container">
            <h1 class="logo">
                KUTEW
            </h1>
            <div class="page">Home Page</div>
            <div class="search-bar">
                <i class="fa-solid fa-magnifying-glass"></i>
                <input type="search" placeholder="Search">
            </div>
        </div>
    </nav> -->
    <%- include('../includes/navbar.ejs')%>

    <!-- main -->
    <main>
      <div class="container">
        <!-- left -->
        <%- include('../includes/sidebar.ejs')%>
        <!-- middle -->
        <div class="middle">
          <form class="create-post">
            <div class="profile-photo">
              <img src="./img/contract.png" />
            </div>
            <input
              type="text"
              placeholder="Post A New Course!"
              id="create-post"
            />
            <input type="submit" value="Post" class="btn btn-primary" />
          </form>
          <div class="show-income">
            <div class="income-detail">
              <h3>Total Income</h3>
              <div class="income">
                <i class="fa-solid fa-baht-sign"></i>
                <span id="total-income">Loading...</span>
              </div>
            </div>
          </div>
          <!-- feed -->
          <div class="feeds" id="feeds">
            

          </div>
        </div>
        <!-- right -->
        <%- include('../includes/rightbar.ejs')%>
      </div>
    </main>

    <script>

document.addEventListener('DOMContentLoaded', async () => {
    try {
        // ดึงค่า userId ที่ถูกส่งมาจากฝั่งเซิร์ฟเวอร์
        const userId = '<%= userId %>';
        console.log('id', userId);

        if (!userId) {
            console.error('No user ID found');
            return;
        }

        // Fetch tutor data based on the userId
        const tDataResponse = await fetch(`/user/tdata/${userId}`);
        const tData = await tDataResponse.json();

        if (!tData || tData.length === 0) {
            console.error('Tutor data not found');
            return;
        }

        const tutorId = tData[0].tutor_id;

        // Fetch tutor status using GET

        const response = await fetch(`/user/t/${tutorId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id: tutorId })
        });
        // const response = await fetch(`/user/t/${tutorId}`);
        const userData = await response.json();

        if (!userData || userData.length === 0) {
            console.error('User data not found');
            return;
        }

        const tutorStatus = userData[0].status;

        // ตรวจสอบสถานะและเปลี่ยนหน้าเว็บ (ป้องกันการวนลูป)
        if (tutorStatus === 'pending') {
            window.location.href = '/waitingadmin';
        } else if (tutorStatus === 'Deny') {
            window.location.href = '/rejectadmin';
        }
    } catch (error) {
        console.error('Error fetching tutor status:', error);
    }
});
const menuItems = document.querySelectorAll('.menu-item');

    //remove active class from all 
const changeActiveItem = () =>{
    menuItems.forEach(item=>{
        item.classList.remove('active');
    })
}

menuItems.forEach(item =>{
    item.addEventListener('click', ()=>{
        changeActiveItem();
        item.classList.add('active');
        if(item.id != 'notifications'){
            document.querySelector('.notification-popup').
            style.display = 'none';
        }else{
            document.querySelector('.notification-popup').
            style.display = 'block';
            document.querySelector('#notifications .notification-count').style.display = 'none';
        }
    })
})

document.addEventListener('DOMContentLoaded', async () => {
    try {
      // Fetch total income from the /user/price API
      const incomeResponse = await fetch('/user/price');
      console.log(incomeResponse)
      const incomeData = await incomeResponse.json();
      console.log(incomeData)

      // Display the total income
      const totalIncomeElement = document.getElementById('total-income');
      totalIncomeElement.textContent = incomeData.price  || '0';
    } catch (error) {
      console.error('Error fetching income data:', error);
      document.getElementById('total-income').textContent = 'Error';
    }
  });

document.querySelector('.create-post').addEventListener('submit', function(event) {
    event.preventDefault();
    window.location.href = '/createpost';
  });

  document.addEventListener('DOMContentLoaded', async () => {
    try {
        // Fetch user data to check their role
        const userResponse = await fetch('/user/u');
        const userData = await userResponse.json();
        const userRole = userData.role;
        
        const response = await fetch('/post/my/all');
        const courses = await response.json();

        const feedsContainer = document.getElementById('feeds');
        courses.forEach(course => {
            const feed = document.createElement('div');
            feed.classList.add('feed');


            const formattedDate = new Date(course.date).toISOString().split('T')[0];
            const postDate = new Date(course.post_date).toISOString().split('T')[0];
            
            // Check if profilePic exists, if not use the default image
            const profilePic = course.profilePic ? course.profilePic : './img/racc.jfif';
            const post_id = course.post_id;

            feed.innerHTML = `
                <div class="head">
                    <div class="user">
                        <div class="profile-photo">
                            <img src="${profilePic}" alt="Tutor Profile Picture">
                        </div>
                        <div class="info">
                            <h3><a href="/profiletutor/${course.user_id}" class="tutor-link">${course.tutor_name}</a></h3>
                            <small>Posted on : ${postDate}</small>
                        </div>
                    </div>
                    <span class="join">
                        <button class="btn btn-primary join-btn">JOIN</button>
                    </span>
                </div>
                <div class="caption">
                    <i class="fa-solid fa-book"><p>Tag :<p class="p-font">${course.tag}</p> </p></i>
                    <i class="fa-solid fa-newspaper"><p>Detail :<p class="p-font">${course.details}</p> </p></i>
                    <i class="fa-solid fa-clock"><p>Teaching start :<p class="p-font">${formattedDate}</p> </p></i>
                    <i class="fa-solid fa-map-pin"><p>Location :<p class="p-font">${course.location}</p> </p></i>
                </div>
            `;

            // ซ่อนปุ่ม "JOIN" เมื่อผู้ใช้เป็นติวเตอร์
        if (userRole === 'tutor') {
            const joinButtonSpan = feed.querySelector('.join');
            if (joinButtonSpan) {
                joinButtonSpan.style.display = 'none';
            }
        }
            const joinButton = feed.querySelector('.join-btn');
            joinButton.addEventListener('click', () => {
                window.location.href = `/joinclass?post_id=${post_id}`;
            });

            feedsContainer.appendChild(feed);
        });
    } catch (error) {
        console.error('Error fetching courses:', error);
    }
});

document.addEventListener('DOMContentLoaded', async () => {
    try {
        // เรียก API เพื่อตรวจสอบบทบาทของผู้ใช้
        const response = await fetch('/user/u');
        const userData = await response.json();

        const userRole = userData.role;

        // ซ่อนฟอร์มถ้าผู้ใช้เป็น student
        if (userRole === 'student') {
            const createPostForm = document.querySelector('.create-post');
            const showIncome = document.querySelector('.show-income');
            if (createPostForm) {
                createPostForm.style.display = 'none';
            }
            if(showIncome){
                showIncome.style.display = 'none';
            }
        }


    } catch (error) {
        console.error('Error fetching user data:', error);
    }
});
    </script>
  </body>
</html>