<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/css/adminpage.css">
    <title>admin</title>
</head>
<body>
    <!-- navbar -->
    <%- include('../includes/navbar_admin.ejs') %>
    <!-- main -->
    <main>
        <div class="container">
            <!-- left -->
            <%- include('../includes/sidebar_admin.ejs') %>
            <!-- right -->
            <div class="right">
                <div class="right-background">
                    <div class="reports">
                        <!-- Reported comments will be dynamically inserted here by JavaScript -->
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            fetch('/comment/')
                .then(response => response.json())
                .then(data => {
                    console.log(data); // ตรวจสอบข้อมูลที่ได้รับ

                    const reportsContainer = document.querySelector('.reports');

                    if (Array.isArray(data.comments) && data.comments.length > 0) {
                        data.comments.forEach(comment => {
                            // สร้างองค์ประกอบสำหรับรายงาน
                            const reportElement = document.createElement('div');
                            reportElement.classList.add('report');

                            reportElement.innerHTML = `
                                <div class="profiles">
                                    <div class="name-report">
                                        <h3>REPORT Comment's Tutor ID: ${comment.tutor_id}</h3>
                                        <h3>From Student ID: ${comment.student_id}</h3>
                                        <p>Text: <span>${comment.text}</span></p>
                                    </div>
                                </div>
                                <div class="permission">
                                    <button type="button" class="delete" data-id="${comment.comment_id}">Delete</button>
                                    <button type="button" class="ignore" data-id="${comment.comment_id}">Ignore</button>
                                </div>
                            `;

                            reportsContainer.appendChild(reportElement);
                        });

                        // Attach event listeners after creating the buttons
                        document.querySelectorAll('.delete').forEach(button => {
                            button.addEventListener('click', () => {
                                const commentId = button.getAttribute('data-id');
                                handleDelete(commentId);
                            });
                        });

                        document.querySelectorAll('.ignore').forEach(button => {
                            button.addEventListener('click', () => {
                                const commentId = button.getAttribute('data-id');
                                handleIgnore(commentId);
                            });
                        });

                    } else {
                        // แสดงข้อความ "No reports found" ถ้าไม่มีรายงาน
                        reportsContainer.innerHTML = '<h3>No reports found.</้>';
                    }
                })
                .catch(error => console.error('Error fetching reports:', error));
        });

        function handleDelete(commentId) {
            if (!commentId) {
                console.error('Invalid comment ID for deletion:', commentId);
                return;
            }

            fetch(`/comment/delete/${commentId}`, {
                method: 'DELETE',
            })
            .then(response => {
                if (response.ok) {
                    // ลบรายงานที่เกี่ยวข้องออกจาก DOM
                    document.querySelector(`.delete[data-id="${commentId}"]`).closest('.report').remove();
                } else {
                    console.error('Failed to delete comment:', commentId);
                }
            })
            .catch(error => console.error('Error:', error));
        }

        function handleIgnore(commentId) {
            if (!commentId) {
                console.error('Invalid comment ID for ignoring:', commentId);
                return;
            }

            fetch(`/comment/reject/${commentId}`, {
                method: 'PUT',
            })
            .then(response => {
                if (response.ok) {
                    // ลบรายงานที่เกี่ยวข้องออกจาก DOM
                    document.querySelector(`.ignore[data-id="${commentId}"]`).closest('.report').remove();
                } else {
                    console.error('Failed to ignore comment:', commentId);
                }
            })
            .catch(error => console.error('Error:', error));
        }
    </script>
</body>
</html>
