<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/css/adminpage.css">
    <title>Admin</title>
</head>
<body>
    <!-- navbar -->
    <%- include('../includes/navbar_admin.ejs') %>
    
    <!-- main -->
    <main>
        <div class="container">
            <!-- left -->
            <%- include('../includes/sidebar_admin.ejs') %>
            
            <!-- right -->
            <div class="right">
                <div class="right-background-treq">
                    <div class="tutor-requests" id="tutorRequests">
                        <!-- Tutor requests will be added here -->
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script>
        // Fetch tutor requests
        async function fetchTutorRequests() {
            try {
                const response = await fetch('/admin/tutorstatus/');
                const tutors = await response.json();
                
                const tutorRequestsContainer = document.getElementById('tutorRequests');

                // Clear any existing content
                tutorRequestsContainer.innerHTML = '';

                // Check if there are no tutor requests
                if (tutors.length === 0) {
                    tutorRequestsContainer.innerHTML = '<p>Don\'t have any tutor\'s request</p>';
                    
                    tutorRequestsContainer.style.backgroundColor = 'transparent';
                    tutorRequestsContainer.style.padding = '0';
                    tutorRequestsContainer.style.color = 'var(--black-color)';
                    return;
                }

                // Loop and create the HTML for each one
                tutors.forEach(tutor => {
                    const tutorElement = document.createElement('div');
                    tutorElement.className = 'tutor-request';

                    tutorElement.innerHTML = `
                        <div class="profiles">
                            <img src="${tutor.profilePic}" alt="">
                            <h3><a href="/tutorinfo/${tutor.tutor_id}">${tutor.name}</a></h3>
                        </div>
                        <div class="permission">
                            <button type="submit" class="accept" data-join-id="${tutor.tutor_id}">Accept</button>
                            <button type="submit" class="deny" data-join-id="${tutor.tutor_id}">Deny</button>
                        </div>
                    `;

                    tutorRequestsContainer.appendChild(tutorElement);
                });

                // Add event listeners to buttons after tutor requests are added to DOM
                addEventListeners();
            } catch (error) {
                console.error('Error fetching tutor requests:', error);
            }
        }

         // Function to handle accept and deny button clicks
         function addEventListeners() {
            document.querySelectorAll('.accept').forEach(button => {
                button.addEventListener('click', async (event) => {
                    const tutorId = event.target.getAttribute('data-join-id');
              
                    try {
                        // Accept the join request
                        await fetch(`/admin/accept/${tutorId}`, { method: 'PUT' });

                        // Call the group admin chat API after accepting the tutor request
                        const chatResponse = await fetch(`/chat/groupadmin/${tutorId}`, { method: 'POST' });
                        
                        if (!chatResponse.ok) {
                            throw new Error('Failed to add tutor to chat with admin');
                        }
              
                        // Remove the join request from the "Pending" section
                        const joinRequestElement = event.target.closest('.tutor-request');
                        joinRequestElement.remove();
              
                    } catch (error) {
                        console.error('Error processing request:', error);
                    }
                });
            });
            
            document.querySelectorAll('.deny').forEach(button => {
                button.addEventListener('click', async (event) => {
                    const tutorId = event.target.getAttribute('data-join-id');
              
                    try {
                        // Deny the join request
                        await fetch(`/admin/deny/${tutorId}`, { method: 'DELETE' });
              
                        // Remove the join request from the "Pending" section
                        const joinRequestElement = event.target.closest('.tutor-request');
                        joinRequestElement.remove();
              
                    } catch (error) {
                        console.error('Error processing request:', error);
                    }
                });
            });
        }
        // Fetch tutor requests when the page loads
        document.addEventListener('DOMContentLoaded', fetchTutorRequests);
    </script>
</body>
</html>
